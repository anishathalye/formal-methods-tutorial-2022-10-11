#lang yosys
; SMT-LIBv2 description generated by Yosys 0.21 (git sha1 e6d2a900a97, clang 13.1.6 -fPIC -Os)
; yosys-smt2-stdt
; yosys-smt2-module fifo_impl
(declare-datatype |fifo_impl_s| ((|fifo_impl_mk|
  (|fifo_impl_is| Bool)
  (|fifo_impl#0| Bool) ; \clk
  (|fifo_impl#1| (_ BitVec 32)) ; \data_in
  (|fifo_impl#2#0| (Array (_ BitVec 2) (_ BitVec 32))) ; data
  (|fifo_impl#3| (_ BitVec 2)) ; \head
  (|fifo_impl#5| (_ BitVec 2)) ; \tail
  (|fifo_impl#10| Bool) ; \rd
  (|fifo_impl#11| Bool) ; \resetn
  (|fifo_impl#12| Bool) ; \wr
)))
; yosys-smt2-input clk 1
; yosys-smt2-clock clk posedge
; yosys-smt2-witness {"offset": 0, "path": ["\\clk"], "smtname": "clk", "type": "posedge", "width": 1}
; yosys-smt2-witness {"offset": 0, "path": ["\\clk"], "smtname": "clk", "type": "input", "width": 1}
(define-fun |fifo_impl_n clk| ((state |fifo_impl_s|)) Bool (|fifo_impl#0| state))
; yosys-smt2-input data_in 32
; yosys-smt2-witness {"offset": 0, "path": ["\\data_in"], "smtname": "data_in", "type": "input", "width": 32}
(define-fun |fifo_impl_n data_in| ((state |fifo_impl_s|)) (_ BitVec 32) (|fifo_impl#1| state))
; yosys-smt2-memory data 2 32 1 1 sync
; yosys-smt2-witness {"path": ["\\data"], "rom": false, "size": 4, "smtname": "data", "statebv": false, "type": "mem", "uninitialized": [{"offset": 0, "width": 128}], "width": 32}
(define-fun |fifo_impl_m data| ((state |fifo_impl_s|)) (Array (_ BitVec 2) (_ BitVec 32)) (|fifo_impl#2#0| state))
; yosys-smt2-witness {"offset": 0, "path": ["\\head"], "smtname": 3, "type": "reg", "width": 2}
(define-fun |fifo_impl_m:R0A data| ((state |fifo_impl_s|)) (_ BitVec 2) (|fifo_impl#3| state)) ; \head
(define-fun |fifo_impl#4| ((state |fifo_impl_s|)) (_ BitVec 32) (select (|fifo_impl#2#0| state) (|fifo_impl_m:R0A data| state))) ; $memrd$\data$fifo_impl.v:40$24_DATA
(define-fun |fifo_impl_m:R0D data| ((state |fifo_impl_s|)) (_ BitVec 32) (|fifo_impl#4| state))
; yosys-smt2-witness {"offset": 0, "path": ["\\tail"], "smtname": 5, "type": "reg", "width": 2}
(define-fun |fifo_impl#6| ((state |fifo_impl_s|)) Bool (= (|fifo_impl#3| state) (|fifo_impl#5| state))) ; \empty
(define-fun |fifo_impl#7| ((state |fifo_impl_s|)) (_ BitVec 32) (ite (|fifo_impl#6| state) #b00000000000000000000000000000000 (|fifo_impl#4| state))) ; \data_out
; yosys-smt2-output data_out 32
(define-fun |fifo_impl_n data_out| ((state |fifo_impl_s|)) (_ BitVec 32) (|fifo_impl#7| state))
; yosys-smt2-output empty 1
(define-fun |fifo_impl_n empty| ((state |fifo_impl_s|)) Bool (|fifo_impl#6| state))
(define-fun |fifo_impl#8| ((state |fifo_impl_s|)) (_ BitVec 2) (bvadd (|fifo_impl#5| state) #b01)) ; $add$fifo_impl.v:19$3_Y
(define-fun |fifo_impl#9| ((state |fifo_impl_s|)) Bool (= (|fifo_impl#8| state) (|fifo_impl#3| state))) ; \full
; yosys-smt2-output full 1
(define-fun |fifo_impl_n full| ((state |fifo_impl_s|)) Bool (|fifo_impl#9| state))
; yosys-smt2-register head 2
(define-fun |fifo_impl_n head| ((state |fifo_impl_s|)) (_ BitVec 2) (|fifo_impl#3| state))
; yosys-smt2-input rd 1
; yosys-smt2-witness {"offset": 0, "path": ["\\rd"], "smtname": "rd", "type": "input", "width": 1}
(define-fun |fifo_impl_n rd| ((state |fifo_impl_s|)) Bool (|fifo_impl#10| state))
; yosys-smt2-input resetn 1
; yosys-smt2-witness {"offset": 0, "path": ["\\resetn"], "smtname": "resetn", "type": "input", "width": 1}
(define-fun |fifo_impl_n resetn| ((state |fifo_impl_s|)) Bool (|fifo_impl#11| state))
; yosys-smt2-register tail 2
(define-fun |fifo_impl_n tail| ((state |fifo_impl_s|)) (_ BitVec 2) (|fifo_impl#5| state))
; yosys-smt2-input wr 1
; yosys-smt2-witness {"offset": 0, "path": ["\\wr"], "smtname": "wr", "type": "input", "width": 1}
(define-fun |fifo_impl_n wr| ((state |fifo_impl_s|)) Bool (|fifo_impl#12| state))
(define-fun |fifo_impl#13| ((state |fifo_impl_s|)) (_ BitVec 2) (ite (|fifo_impl#9| state) (|fifo_impl#5| state) (|fifo_impl#8| state))) ; $procmux$82_Y
(define-fun |fifo_impl#14| ((state |fifo_impl_s|)) (_ BitVec 2) (ite (|fifo_impl#12| state) (|fifo_impl#13| state) (|fifo_impl#5| state))) ; $procmux$84_Y
(define-fun |fifo_impl#15| ((state |fifo_impl_s|)) (_ BitVec 2) (ite (|fifo_impl#11| state) (|fifo_impl#14| state) #b00)) ; $0\tail[1:0]
(define-fun |fifo_impl#16| ((state |fifo_impl_s|)) (_ BitVec 2) (bvadd (|fifo_impl#3| state) #b01)) ; $add$fifo_impl.v:33$22_Y [1:0]
(define-fun |fifo_impl#17| ((state |fifo_impl_s|)) (_ BitVec 2) (ite (|fifo_impl#6| state) (|fifo_impl#3| state) (|fifo_impl#16| state))) ; $procmux$89_Y
(define-fun |fifo_impl#18| ((state |fifo_impl_s|)) (_ BitVec 2) (ite (|fifo_impl#10| state) (|fifo_impl#17| state) (|fifo_impl#3| state))) ; $procmux$91_Y
(define-fun |fifo_impl#19| ((state |fifo_impl_s|)) (_ BitVec 2) (ite (|fifo_impl#12| state) (|fifo_impl#3| state) (|fifo_impl#18| state))) ; $procmux$94_Y
(define-fun |fifo_impl#20| ((state |fifo_impl_s|)) (_ BitVec 2) (ite (|fifo_impl#11| state) (|fifo_impl#19| state) #b00)) ; $0\head[1:0]
(define-fun |fifo_impl#21| ((state |fifo_impl_s|)) (_ BitVec 2) (ite (|fifo_impl#9| state) #b00 (|fifo_impl#5| state))) ; $3$memwr$\data$fifo_impl.v:28$1_ADDR[1:0]$17
(define-fun |fifo_impl#22| ((state |fifo_impl_s|)) (_ BitVec 2) (ite (|fifo_impl#12| state) (|fifo_impl#21| state) #b00)) ; $2$memwr$\data$fifo_impl.v:28$1_ADDR[1:0]$13
(define-fun |fifo_impl#23| ((state |fifo_impl_s|)) (_ BitVec 2) (ite (|fifo_impl#11| state) (|fifo_impl#22| state) #b00)) ; $0$memwr$\data$fifo_impl.v:28$1_ADDR[1:0]$6
(define-fun |fifo_impl#24| ((state |fifo_impl_s|)) (_ BitVec 32) (ite (|fifo_impl#9| state) #b00000000000000000000000000000000 (|fifo_impl#1| state))) ; $3$memwr$\data$fifo_impl.v:28$1_DATA[31:0]$18
(define-fun |fifo_impl#25| ((state |fifo_impl_s|)) (_ BitVec 32) (ite (|fifo_impl#12| state) (|fifo_impl#24| state) #b00000000000000000000000000000000)) ; $2$memwr$\data$fifo_impl.v:28$1_DATA[31:0]$14
(define-fun |fifo_impl#26| ((state |fifo_impl_s|)) (_ BitVec 32) (ite (|fifo_impl#11| state) (|fifo_impl#25| state) #b00000000000000000000000000000000)) ; $0$memwr$\data$fifo_impl.v:28$1_DATA[31:0]$7
(define-fun |fifo_impl#27| ((state |fifo_impl_s|)) (_ BitVec 1) (ite (|fifo_impl#9| state) #b0 #b1)) ; $3$memwr$\data$fifo_impl.v:28$1_EN[31:0]$19 [31]
(define-fun |fifo_impl#28| ((state |fifo_impl_s|)) (_ BitVec 1) (ite (|fifo_impl#12| state) (|fifo_impl#27| state) #b0)) ; $2$memwr$\data$fifo_impl.v:28$1_EN[31:0]$15 [31]
(define-fun |fifo_impl#29| ((state |fifo_impl_s|)) (_ BitVec 1) (ite (|fifo_impl#11| state) (|fifo_impl#28| state) #b0)) ; $0$memwr$\data$fifo_impl.v:28$1_EN[31:0]$8 [31]
(define-fun |fifo_impl_m:W0A data| ((state |fifo_impl_s|)) (_ BitVec 2) (|fifo_impl#23| state)) ; $0$memwr$\data$fifo_impl.v:28$1_ADDR[1:0]$6
(define-fun |fifo_impl_m:W0D data| ((state |fifo_impl_s|)) (_ BitVec 32) (|fifo_impl#26| state)) ; $0$memwr$\data$fifo_impl.v:28$1_DATA[31:0]$7
(define-fun |fifo_impl_m:W0M data| ((state |fifo_impl_s|)) (_ BitVec 32) (concat (|fifo_impl#29| state) (concat (|fifo_impl#29| state) (concat (|fifo_impl#29| state) (concat (|fifo_impl#29| state) (concat (|fifo_impl#29| state) (concat (|fifo_impl#29| state) (concat (|fifo_impl#29| state) (concat (|fifo_impl#29| state) (concat (|fifo_impl#29| state) (concat (|fifo_impl#29| state) (concat (|fifo_impl#29| state) (concat (|fifo_impl#29| state) (concat (|fifo_impl#29| state) (concat (|fifo_impl#29| state) (concat (|fifo_impl#29| state) (concat (|fifo_impl#29| state) (concat (|fifo_impl#29| state) (concat (|fifo_impl#29| state) (concat (|fifo_impl#29| state) (concat (|fifo_impl#29| state) (concat (|fifo_impl#29| state) (concat (|fifo_impl#29| state) (concat (|fifo_impl#29| state) (concat (|fifo_impl#29| state) (concat (|fifo_impl#29| state) (concat (|fifo_impl#29| state) (concat (|fifo_impl#29| state) (concat (|fifo_impl#29| state) (concat (|fifo_impl#29| state) (concat (|fifo_impl#29| state) (concat (|fifo_impl#29| state) (|fifo_impl#29| state))))))))))))))))))))))))))))))))) ; { $0$memwr$\data$fifo_impl.v:28$1_EN[31:0]$8 [31] $0$memwr$\data$fifo_impl.v:28$1_EN[31:0]$8 [31] $0$memwr$\data$fifo_impl.v:28$1_EN[31:0]$8 [31] $0$memwr$\data$fifo_impl.v:28$1_EN[31:0]$8 [31] $0$memwr$\data$fifo_impl.v:28$1_EN[31:0]$8 [31] $0$memwr$\data$fifo_impl.v:28$1_EN[31:0]$8 [31] $0$memwr$\data$fifo_impl.v:28$1_EN[31:0]$8 [31] $0$memwr$\data$fifo_impl.v:28$1_EN[31:0]$8 [31] $0$memwr$\data$fifo_impl.v:28$1_EN[31:0]$8 [31] $0$memwr$\data$fifo_impl.v:28$1_EN[31:0]$8 [31] $0$memwr$\data$fifo_impl.v:28$1_EN[31:0]$8 [31] $0$memwr$\data$fifo_impl.v:28$1_EN[31:0]$8 [31] $0$memwr$\data$fifo_impl.v:28$1_EN[31:0]$8 [31] $0$memwr$\data$fifo_impl.v:28$1_EN[31:0]$8 [31] $0$memwr$\data$fifo_impl.v:28$1_EN[31:0]$8 [31] $0$memwr$\data$fifo_impl.v:28$1_EN[31:0]$8 [31] $0$memwr$\data$fifo_impl.v:28$1_EN[31:0]$8 [31] $0$memwr$\data$fifo_impl.v:28$1_EN[31:0]$8 [31] $0$memwr$\data$fifo_impl.v:28$1_EN[31:0]$8 [31] $0$memwr$\data$fifo_impl.v:28$1_EN[31:0]$8 [31] $0$memwr$\data$fifo_impl.v:28$1_EN[31:0]$8 [31] $0$memwr$\data$fifo_impl.v:28$1_EN[31:0]$8 [31] $0$memwr$\data$fifo_impl.v:28$1_EN[31:0]$8 [31] $0$memwr$\data$fifo_impl.v:28$1_EN[31:0]$8 [31] $0$memwr$\data$fifo_impl.v:28$1_EN[31:0]$8 [31] $0$memwr$\data$fifo_impl.v:28$1_EN[31:0]$8 [31] $0$memwr$\data$fifo_impl.v:28$1_EN[31:0]$8 [31] $0$memwr$\data$fifo_impl.v:28$1_EN[31:0]$8 [31] $0$memwr$\data$fifo_impl.v:28$1_EN[31:0]$8 [31] $0$memwr$\data$fifo_impl.v:28$1_EN[31:0]$8 [31] $0$memwr$\data$fifo_impl.v:28$1_EN[31:0]$8 [31] $0$memwr$\data$fifo_impl.v:28$1_EN[31:0]$8 [31] }
(define-fun |fifo_impl#2#1| ((state |fifo_impl_s|)) (Array (_ BitVec 2) (_ BitVec 32)) (ite (= (|fifo_impl_m:W0M data| state) #b00000000000000000000000000000000) (|fifo_impl#2#0| state) (store (|fifo_impl#2#0| state) (|fifo_impl_m:W0A data| state) (bvor (bvand (|fifo_impl_m:W0D data| state) (|fifo_impl_m:W0M data| state)) (bvand (select (|fifo_impl#2#0| state) (|fifo_impl_m:W0A data| state)) (bvnot (|fifo_impl_m:W0M data| state))))))) ; data
(define-fun |fifo_impl_a| ((state |fifo_impl_s|)) Bool true)
(define-fun |fifo_impl_u| ((state |fifo_impl_s|)) Bool true)
(define-fun |fifo_impl_i| ((state |fifo_impl_s|)) Bool true)
(define-fun |fifo_impl_h| ((state |fifo_impl_s|)) Bool true)
(define-fun |fifo_impl_t| ((state |fifo_impl_s|) (next_state |fifo_impl_s|)) Bool (and
  (= (|fifo_impl#15| state) (|fifo_impl#5| next_state)) ; $procdff$100 \tail
  (= (|fifo_impl#20| state) (|fifo_impl#3| next_state)) ; $procdff$99 \head
  (= (|fifo_impl#2#1| state) (|fifo_impl#2#0| next_state)) ; data
)) ; end of module fifo_impl
; yosys-smt2-topmod fifo_impl
; end of yosys output
